#!/bin/bash

# Colores
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m' # No Color

API_URL="http://localhost:3000/api/education"
ADMIN_TOKEN="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4ZGUyYjEzNWI5ZWQ4NmQxOGFhNzgwNyIsImlhdCI6MTc1OTM5MDQ5OSwiZXhwIjoxNzU5Mzk0MDk5fQ.O7YeAQ3elTdndMCPB3Thl9YbqVDXQqxHYefhY0vrt-Y" # <-- Pon aqu√≠ tu token JW
EDU_ID_INVALIDO="123"
EDU_ID_NO_EXISTE="0123456789abcdef01234567"

show_result() {
  local test_name="$1"
  local response="$2"
  local status="$3"
  local expected="$4"
  echo -e "${YELLOW}$test_name${NC}"
  echo -e "Response: $response"
  echo -e "Status: $status"
  echo -e "${GREEN}Esperado: $expected${NC}\n"
}

# Crear educaci√≥n de prueba y devolver su ID
echo -e "${BLUE}üìã Creando educaci√≥n de prueba para PATCH...${NC}"
EDU_ID_VALIDO=$(curl -s -X POST "$API_URL" \
    -H "Cookie: accessToken=${ADMIN_TOKEN}" \
    -H "Content-Type: application/json" \
    -d '{"institution": "Universidad Test", "degree": "Licenciatura", "field": "Ingenier√≠a", "startDate": "2015-01-01", "endDate": "2020-01-01"}' | jq -r '._id')
if [ -z "$EDU_ID_VALIDO" ] || [ "$EDU_ID_VALIDO" = "null" ]; then
  echo -e "${RED}‚ùå ERROR: No se pudo crear educaci√≥n de prueba. Verifica que el servidor est√© corriendo y POST funcione.${NC}"
  exit 1
fi

echo -e "${BLUE}üöÄ TESTING UPDATE EDUCATION ENDPOINT (PATCH)${NC}"
echo -e "${BLUE}===== Casos de validaci√≥n Zod y errores de negocio =====${NC}\n"

# ‚úÖ HAPPY PATH
response=$(curl -s -w "\nStatus: %{http_code}\n" -X PATCH $API_URL/$EDU_ID_VALIDO \
    -H "Cookie: accessToken=${ADMIN_TOKEN}" \
    -H "Content-Type: application/json" \
    -d '{"institution": "Universidad Actualizada", "degree": "Maestr√≠a", "field": "Ciencias", "startDate": "2016-01-01", "endDate": "2021-01-01"}')
show_result "Test 1: Actualizaci√≥n v√°lida de todos los campos" "$response" "$(echo "$response" | tail -n 1)" "200 OK"

# ‚ùå VALIDATION ERROR TESTS
response=$(curl -s -w "\nStatus: %{http_code}\n" -X PATCH $API_URL/$EDU_ID_VALIDO \
    -H "Cookie: accessToken=${ADMIN_TOKEN}" \
    -H "Content-Type: application/json" \
    -d '{"institution": "", "degree": "", "field": "", "startDate": "", "endDate": ""}')
show_result "Test 2: Campos vac√≠os" "$response" "$(echo "$response" | tail -n 1)" "400 - ValidationError (campos vac√≠os)"

response=$(curl -s -w "\nStatus: %{http_code}\n" -X PATCH $API_URL/$EDU_ID_VALIDO \
    -H "Cookie: accessToken=${ADMIN_TOKEN}" \
    -H "Content-Type: application/json" \
    -d '{"institution": 123, "degree": false, "field": {}, "startDate": 2020, "endDate": []}')
show_result "Test 3: Tipos incorrectos" "$response" "$(echo "$response" | tail -n 1)" "400 - ValidationError (tipos incorrectos)"

response=$(curl -s -w "\nStatus: %{http_code}\n" -X PATCH $API_URL/$EDU_ID_VALIDO \
    -H "Cookie: accessToken=${ADMIN_TOKEN}" \
    -H "Content-Type: application/json" \
    -d '{"startDate": "2025-01-01", "endDate": "2010-01-01"}')
show_result "Test 4: startDate > endDate" "$response" "$(echo "$response" | tail -n 1)" "400 - ValidationError (rango de fechas)"

# ‚ùå MULTIPLE VALIDATION ERRORS
response=$(curl -s -w "\nStatus: %{http_code}\n" -X PATCH $API_URL/$EDU_ID_VALIDO \
    -H "Cookie: accessToken=${ADMIN_TOKEN}" \
    -H "Content-Type: application/json" \
    -d '{"institution": "", "degree": "", "startDate": "a√±o"}')
show_result "Test 5: M√∫ltiples errores de validaci√≥n" "$response" "$(echo "$response" | tail -n 1)" "400 - ValidationError (m√∫ltiples errores)"

# ‚ùå ID INVALIDO
response=$(curl -s -w "\nStatus: %{http_code}\n" -X PATCH $API_URL/$EDU_ID_INVALIDO \
    -H "Cookie: accessToken=${ADMIN_TOKEN}" \
    -H "Content-Type: application/json" \
    -d '{"institution": "Universidad"}')
show_result "Test 6: ID inv√°lido (formato)" "$response" "$(echo "$response" | tail -n 1)" "400 - ValidationError (ID inv√°lido)"

# ‚ùå ID NO EXISTE
response=$(curl -s -w "\nStatus: %{http_code}\n" -X PATCH $API_URL/$EDU_ID_NO_EXISTE \
    -H "Cookie: accessToken=${ADMIN_TOKEN}" \
    -H "Content-Type: application/json" \
    -d '{"institution": "Universidad"}')
show_result "Test 7: ID v√°lido pero no existe en la base" "$response" "$(echo "$response" | tail -n 1)" "404 - NotFoundError"

# ‚ùå AUTH ERROR
response=$(curl -s -w "\nStatus: %{http_code}\n" -X PATCH $API_URL/$EDU_ID_VALIDO \
    -H "Content-Type: application/json" \
    -d '{"institution": "Universidad"}')
show_result "Test 8: Sin autenticaci√≥n (sin cookie)" "$response" "$(echo "$response" | tail -n 1)" "401 - AuthorizationError"

# ‚ùå MALFORMED REQUEST
response=$(curl -s -w "\nStatus: %{http_code}\n" -X PATCH $API_URL/$EDU_ID_VALIDO \
    -H "Cookie: accessToken=${ADMIN_TOKEN}" \
    -H "Content-Type: application/json" \
    -d '{"institution": "JSON mal formado", "degree": "Licenciatura" "field": ["sin-cerrar-corchete"]}')
show_result "Test 9: JSON malformado" "$response" "$(echo "$response" | tail -n 1)" "400 - JSON Parse Error"

response=$(curl -s -w "\nStatus: %{http_code}\n" -X PATCH $API_URL/$EDU_ID_VALIDO \
  -H "Cookie: accessToken=${ADMIN_TOKEN}" \
  -H "Content-Type: text/plain" \
  -d 'esto-no-es-json')
show_result "Test 10: Content-Type incorrecto" "$response" "$(echo "$response" | tail -n 1)" "400 - Invalid Content-Type"

echo -e "${BLUE}===============================================${NC}"
echo -e "${BLUE}üèÅ TESTS DE UPDATE EDUCATION COMPLETADOS${NC}"
echo -e "${BLUE}===============================================${NC}\n"

echo -e "${GREEN}‚úÖ Tests exitosos esperados: 1${NC}"
echo -e "${RED}‚ùå Tests de error esperados: 2-10${NC}\n"

echo -e "${YELLOW}üü° COBERTURA DE CASOS:${NC}"
echo -e "   ‚Ä¢ Happy Path: Actualizaci√≥n v√°lida"
echo -e "   ‚Ä¢ Validation Errors: Campos vac√≠os, tipos incorrectos, rango de a√±os"
echo -e "   ‚Ä¢ Duplicity Errors: (si aplica en tu backend)"
echo -e "   ‚Ä¢ Auth Errors: Sin autenticaci√≥n"
echo -e "   ‚Ä¢ Malformed Requests: JSON inv√°lido, Content-Type incorrecto"
echo -e "   ‚Ä¢ ID inv√°lido/no existe"
